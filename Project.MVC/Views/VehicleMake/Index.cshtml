@model Project.Service.ViewModels.PageResult<Project.Service.ViewModels.VehicleMakeViewModel>

@{
    ViewData["Title"] = "Index";
}

<head>
    <link href="~/css/index.css" rel="stylesheet" />
</head>

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" />
            @if ((string)ViewData["CurrentFilter"] != null)
            {
                <a asp-action="Index">Back to Full List</a>
            }
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]" asp-route-pageNumber="@(Model.PageIndex)">Name</a>
                @if ((string)ViewData["CurrentSort"] == "name_asc" || (string)ViewData["CurrentSort"] == null)
                {
                    <span>&#9650;</span>
                }
                else if ((string)ViewData["CurrentSort"] == "name_desc")
                {
                    <span>&#9660;</span>
                }
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AbrvSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]" asp-route-pageNumber="@(Model.PageIndex)">Abrv</a>
                @if ((string)ViewData["CurrentSort"] == "Abrv")
                {
                    <span>&#9650;</span>
                }
                else if ((string)ViewData["CurrentSort"] == "abrv_desc")
                {
                    <span>&#9660;</span>
                }
            </th>
            <th>
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Abrv)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { onclick = "return confirm('Are you sure you want to delete this item? Deleting this item will delete all Models associated with it.')" })
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
<p>
    Page @(Model.PageIndex) of @Model.TotalPages
</p>